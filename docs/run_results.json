{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-22T19:18:57.008987Z", "invocation_id": "d0f035fd-a8a9-4304-8533-ba595a862152", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.734362Z", "completed_at": "2024-03-22T19:18:55.753687Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.764115Z", "completed_at": "2024-03-22T19:18:55.764134Z"}], "thread_id": "Thread-1", "execution_time": 0.037420034408569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_assignee_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_assignee_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_assignee_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.742323Z", "completed_at": "2024-03-22T19:18:55.758592Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.765951Z", "completed_at": "2024-03-22T19:18:55.765954Z"}], "thread_id": "Thread-2", "execution_time": 0.03840517997741699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_closed_history_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_closed_history_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_closed_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.746142Z", "completed_at": "2024-03-22T19:18:55.762497Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.767291Z", "completed_at": "2024-03-22T19:18:55.767295Z"}], "thread_id": "Thread-3", "execution_time": 0.03784489631652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_comment_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_comment_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_comment_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.748706Z", "completed_at": "2024-03-22T19:18:55.762914Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.767548Z", "completed_at": "2024-03-22T19:18:55.767551Z"}], "thread_id": "Thread-4", "execution_time": 0.03774595260620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_label_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_label_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_label_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.751194Z", "completed_at": "2024-03-22T19:18:55.763290Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.768030Z", "completed_at": "2024-03-22T19:18:55.768032Z"}], "thread_id": "Thread-5", "execution_time": 0.03771018981933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_merged_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_merged_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_merged_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.753966Z", "completed_at": "2024-03-22T19:18:55.764422Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.769100Z", "completed_at": "2024-03-22T19:18:55.769103Z"}], "thread_id": "Thread-6", "execution_time": 0.038378000259399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_issue_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.756267Z", "completed_at": "2024-03-22T19:18:55.764691Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.769399Z", "completed_at": "2024-03-22T19:18:55.769401Z"}], "thread_id": "Thread-7", "execution_time": 0.031865835189819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__label_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_label_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__label_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.758878Z", "completed_at": "2024-03-22T19:18:55.765448Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.770631Z", "completed_at": "2024-03-22T19:18:55.770634Z"}], "thread_id": "Thread-8", "execution_time": 0.03243589401245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__pull_request_review_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_pull_request_review_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_review_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.777467Z", "completed_at": "2024-03-22T19:18:55.789546Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.800399Z", "completed_at": "2024-03-22T19:18:55.800404Z"}], "thread_id": "Thread-1", "execution_time": 0.030838966369628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__pull_request_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_pull_request_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.795426Z", "completed_at": "2024-03-22T19:18:55.796475Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.801568Z", "completed_at": "2024-03-22T19:18:55.801571Z"}], "thread_id": "Thread-7", "execution_time": 0.023524045944213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_assignee_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.781918Z", "completed_at": "2024-03-22T19:18:55.796861Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.802059Z", "completed_at": "2024-03-22T19:18:55.802062Z"}], "thread_id": "Thread-2", "execution_time": 0.030392885208129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__repo_team_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"55_github_integration_tests\".\"github_repo_team_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repo_team_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.784984Z", "completed_at": "2024-03-22T19:18:55.797449Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.802862Z", "completed_at": "2024-03-22T19:18:55.802866Z"}], "thread_id": "Thread-3", "execution_time": 0.0298159122467041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__repository_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_repository_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repository_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.797695Z", "completed_at": "2024-03-22T19:18:55.798729Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.803122Z", "completed_at": "2024-03-22T19:18:55.803125Z"}], "thread_id": "Thread-8", "execution_time": 0.024751901626586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_closed_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.787334Z", "completed_at": "2024-03-22T19:18:55.799061Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.803380Z", "completed_at": "2024-03-22T19:18:55.803383Z"}], "thread_id": "Thread-4", "execution_time": 0.03046703338623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__requested_reviewer_history_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_requested_reviewer_history_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__requested_reviewer_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.790056Z", "completed_at": "2024-03-22T19:18:55.799430Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.803637Z", "completed_at": "2024-03-22T19:18:55.803639Z"}], "thread_id": "Thread-5", "execution_time": 0.03029608726501465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__team_tmp", "compiled": true, "compiled_code": "\n\nselect * \nfrom \"postgres\".\"55_github_integration_tests\".\"github_team_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__team_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.793210Z", "completed_at": "2024-03-22T19:18:55.799932Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.804387Z", "completed_at": "2024-03-22T19:18:55.804391Z"}], "thread_id": "Thread-6", "execution_time": 0.02767205238342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__user_tmp", "compiled": true, "compiled_code": "select *\nfrom \"postgres\".\"55_github_integration_tests\".\"github_user_data\"", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__user_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.813445Z", "completed_at": "2024-03-22T19:18:55.814660Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.825985Z", "completed_at": "2024-03-22T19:18:55.825989Z"}], "thread_id": "Thread-1", "execution_time": 0.019520044326782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.815762Z", "completed_at": "2024-03-22T19:18:55.816754Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.827057Z", "completed_at": "2024-03-22T19:18:55.827060Z"}], "thread_id": "Thread-7", "execution_time": 0.01938486099243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.817228Z", "completed_at": "2024-03-22T19:18:55.818903Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.827504Z", "completed_at": "2024-03-22T19:18:55.827507Z"}], "thread_id": "Thread-2", "execution_time": 0.019451141357421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_label_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.819389Z", "completed_at": "2024-03-22T19:18:55.820375Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.828236Z", "completed_at": "2024-03-22T19:18:55.828239Z"}], "thread_id": "Thread-3", "execution_time": 0.0195310115814209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_issue_merged_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.820666Z", "completed_at": "2024-03-22T19:18:55.821634Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.828477Z", "completed_at": "2024-03-22T19:18:55.828480Z"}], "thread_id": "Thread-8", "execution_time": 0.019654035568237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_label_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.821888Z", "completed_at": "2024-03-22T19:18:55.822854Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.828717Z", "completed_at": "2024-03-22T19:18:55.828719Z"}], "thread_id": "Thread-4", "execution_time": 0.019756078720092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_pull_request_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.823110Z", "completed_at": "2024-03-22T19:18:55.824072Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.828956Z", "completed_at": "2024-03-22T19:18:55.828958Z"}], "thread_id": "Thread-5", "execution_time": 0.019862890243530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_pull_request_review_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.824542Z", "completed_at": "2024-03-22T19:18:55.825509Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.829667Z", "completed_at": "2024-03-22T19:18:55.829670Z"}], "thread_id": "Thread-6", "execution_time": 0.01999211311340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_repo_team_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.838175Z", "completed_at": "2024-03-22T19:18:55.840106Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.863777Z", "completed_at": "2024-03-22T19:18:55.863783Z"}], "thread_id": "Thread-1", "execution_time": 0.03238415718078613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_repository_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.841236Z", "completed_at": "2024-03-22T19:18:55.842228Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.864893Z", "completed_at": "2024-03-22T19:18:55.864896Z"}], "thread_id": "Thread-7", "execution_time": 0.032377004623413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_requested_reviewer_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.842696Z", "completed_at": "2024-03-22T19:18:55.843675Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.865365Z", "completed_at": "2024-03-22T19:18:55.865368Z"}], "thread_id": "Thread-2", "execution_time": 0.03245902061462402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_team_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.844156Z", "completed_at": "2024-03-22T19:18:55.845126Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:55.866117Z", "completed_at": "2024-03-22T19:18:55.866120Z"}], "thread_id": "Thread-3", "execution_time": 0.03259015083312988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.github_source_integration_tests.github_user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.851691Z", "completed_at": "2024-03-22T19:18:56.352539Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.369685Z", "completed_at": "2024-03-22T19:18:56.369693Z"}], "thread_id": "Thread-4", "execution_time": 0.5724921226501465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_closed_history", "compiled": true, "compiled_code": "with issue_closed_history as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_closed_history_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    actor_id\n    \n as \n    \n    actor_id\n    \n, \n    \n    \n    closed\n    \n as \n    \n    closed\n    \n, \n    \n    \n    commit_sha\n    \n as \n    \n    commit_sha\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n    from issue_closed_history\n\n), fields as (\n\n    select \n      issue_id,\n      cast(updated_at as timestamp) as updated_at,\n      closed as is_closed\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_closed_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.876448Z", "completed_at": "2024-03-22T19:18:56.352851Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.370507Z", "completed_at": "2024-03-22T19:18:56.370510Z"}], "thread_id": "Thread-7", "execution_time": 0.5457689762115479, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue", "compiled": true, "compiled_code": "with issue as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    locked\n    \n as \n    \n    locked\n    \n, \n    \n    \n    milestone_id\n    \n as \n    \n    milestone_id\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    pull_request\n    \n as \n    \n    pull_request\n    \n, \n    \n    \n    repository_id\n    \n as \n    \n    repository_id\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n    from issue \n\n), fields as (\n\n    select \n      id as issue_id,\n      body,\n      cast(closed_at as timestamp) as closed_at,\n      cast(created_at as timestamp) as created_at,\n      locked as is_locked,\n      milestone_id,\n      number as issue_number,\n      pull_request as is_pull_request,\n      repository_id,\n      state,\n      title,\n      cast(updated_at as timestamp) as updated_at,\n      user_id\n      \n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.859473Z", "completed_at": "2024-03-22T19:18:56.358060Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.371048Z", "completed_at": "2024-03-22T19:18:56.371052Z"}], "thread_id": "Thread-6", "execution_time": 0.5859918594360352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_label", "compiled": true, "compiled_code": "with issue_label as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_label_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    label_id\n    \n as \n    \n    label_id\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n\n\n\n\n    from issue_label\n\n), fields as (\n\n    select \n      issue_id,\n      label_id\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_label\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.880348Z", "completed_at": "2024-03-22T19:18:56.371313Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.374427Z", "completed_at": "2024-03-22T19:18:56.374430Z"}], "thread_id": "Thread-2", "execution_time": 0.5532939434051514, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__label", "compiled": true, "compiled_code": "with issue_label as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__label_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    color\n    \n as \n    \n    color\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_default\n    \n as \n    \n    is_default\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n\n    from issue_label\n\n), fields as (\n\n    select \n        id as label_id,\n        _fivetran_synced,\t\n        color,\n        description,\n        is_default,\n        name as label,\n        url\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__label\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.855661Z", "completed_at": "2024-03-22T19:18:56.369960Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.373633Z", "completed_at": "2024-03-22T19:18:56.373636Z"}], "thread_id": "Thread-5", "execution_time": 0.5891718864440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_comment", "compiled": true, "compiled_code": "with issue_comment as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_comment_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n    from issue_comment\n\n), fields as (\n\n    select \n        id as issue_comment_id,\n        issue_id,\n        user_id,\n        created_at\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_comment\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.884541Z", "completed_at": "2024-03-22T19:18:56.370767Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.374142Z", "completed_at": "2024-03-22T19:18:56.374145Z"}], "thread_id": "Thread-3", "execution_time": 0.5552959442138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__pull_request_review", "compiled": true, "compiled_code": "with pull_request_review as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_review_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    commit_sha\n    \n as \n    \n    commit_sha\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    pull_request_id\n    \n as \n    \n    pull_request_id\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    submitted_at\n    \n as \n    \n    submitted_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n    from pull_request_review\n\n), fields as (\n\n    select \n      id as pull_request_review_id,\n      pull_request_id,\n      cast(submitted_at as timestamp) as submitted_at,\n      state,\n      user_id\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_review\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.845379Z", "completed_at": "2024-03-22T19:18:56.369309Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.373360Z", "completed_at": "2024-03-22T19:18:56.373363Z"}], "thread_id": "Thread-8", "execution_time": 0.5913939476013184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_assignee", "compiled": true, "compiled_code": "with issue_assignee as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_assignee_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n    from issue_assignee\n\n), fields as (\n\n    select \n      issue_id,\n      user_id\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_assignee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:55.872268Z", "completed_at": "2024-03-22T19:18:56.368488Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.372238Z", "completed_at": "2024-03-22T19:18:56.372240Z"}], "thread_id": "Thread-1", "execution_time": 0.5587778091430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__issue_merged", "compiled": true, "compiled_code": "with issue_merged as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_merged_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    actor_id\n    \n as \n    \n    actor_id\n    \n, \n    \n    \n    commit_sha\n    \n as \n    \n    commit_sha\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n, \n    \n    \n    merged_at\n    \n as \n    \n    merged_at\n    \n\n\n\n\n    from issue_merged\n\n), fields as (\n\n    select \n      issue_id,\n      cast(merged_at as timestamp) as merged_at\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_merged\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.449432Z", "completed_at": "2024-03-22T19:18:56.464382Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.465637Z", "completed_at": "2024-03-22T19:18:56.465643Z"}], "thread_id": "Thread-8", "execution_time": 0.031129121780395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.dbt_utils_unique_combination_of_columns_stg_github__issue_closed_history_issue_id__updated_at.b98ed2830d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        issue_id, updated_at\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_closed_history\"\n    group by issue_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.457460Z", "completed_at": "2024-03-22T19:18:56.464792Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.465925Z", "completed_at": "2024-03-22T19:18:56.465929Z"}], "thread_id": "Thread-1", "execution_time": 0.027403831481933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__issue_issue_id.74e7778ca7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect issue_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue\"\nwhere issue_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.473013Z", "completed_at": "2024-03-22T19:18:56.475948Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.476451Z", "completed_at": "2024-03-22T19:18:56.476456Z"}], "thread_id": "Thread-1", "execution_time": 0.008766889572143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__label_label_id.9f07379974", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect label_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__label\"\nwhere label_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.468956Z", "completed_at": "2024-03-22T19:18:56.480773Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.481332Z", "completed_at": "2024-03-22T19:18:56.481336Z"}], "thread_id": "Thread-8", "execution_time": 0.014120817184448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__issue_issue_id.84891aeece", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    issue_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue\"\nwhere issue_id is not null\ngroup by issue_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.477979Z", "completed_at": "2024-03-22T19:18:56.482412Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.483560Z", "completed_at": "2024-03-22T19:18:56.483564Z"}], "thread_id": "Thread-1", "execution_time": 0.00927591323852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__label_label_id.74d3c21466", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    label_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__label\"\nwhere label_id is not null\ngroup by label_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.483814Z", "completed_at": "2024-03-22T19:18:56.491289Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.491808Z", "completed_at": "2024-03-22T19:18:56.491812Z"}], "thread_id": "Thread-8", "execution_time": 0.009794950485229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__issue_comment_issue_comment_id.11ddd56f0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect issue_comment_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_comment\"\nwhere issue_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.487950Z", "completed_at": "2024-03-22T19:18:56.492072Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.493338Z", "completed_at": "2024-03-22T19:18:56.493341Z"}], "thread_id": "Thread-1", "execution_time": 0.006788015365600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__issue_comment_issue_comment_id.695b2e454a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    issue_comment_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_comment\"\nwhere issue_comment_id is not null\ngroup by issue_comment_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.494937Z", "completed_at": "2024-03-22T19:18:56.501052Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.501569Z", "completed_at": "2024-03-22T19:18:56.501573Z"}], "thread_id": "Thread-8", "execution_time": 0.008737802505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__pull_request_review_pull_request_review_id.c646eee790", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pull_request_review_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_review\"\nwhere pull_request_review_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.498353Z", "completed_at": "2024-03-22T19:18:56.501809Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.503174Z", "completed_at": "2024-03-22T19:18:56.503177Z"}], "thread_id": "Thread-1", "execution_time": 0.006289958953857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__pull_request_review_pull_request_review_id.1092c62508", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    pull_request_review_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_review\"\nwhere pull_request_review_id is not null\ngroup by pull_request_review_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.504575Z", "completed_at": "2024-03-22T19:18:56.508050Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.508572Z", "completed_at": "2024-03-22T19:18:56.508577Z"}], "thread_id": "Thread-8", "execution_time": 0.00558781623840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.dbt_utils_unique_combination_of_columns_stg_github__issue_assignee_issue_id__user_id.7e32c758e4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        issue_id, user_id\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__issue_assignee\"\n    group by issue_id, user_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.445610Z", "completed_at": "2024-03-22T19:18:56.910424Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.911531Z", "completed_at": "2024-03-22T19:18:56.911539Z"}], "thread_id": "Thread-3", "execution_time": 0.5185589790344238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__user", "compiled": true, "compiled_code": "with github_user as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__user_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    company\n    \n as \n    \n    company\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    login\n    \n as \n    \n    login\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n        \n        \n    from github_user\n\n), fields as (\n\n    select\n      id as user_id,\n      login as login_name,\n      name,\n      company\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.410614Z", "completed_at": "2024-03-22T19:18:56.911196Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.914081Z", "completed_at": "2024-03-22T19:18:56.914084Z"}], "thread_id": "Thread-4", "execution_time": 0.5517427921295166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__pull_request", "compiled": true, "compiled_code": "with pull_request as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    base_label\n    \n as \n    \n    base_label\n    \n, \n    \n    \n    base_ref\n    \n as \n    \n    base_ref\n    \n, \n    \n    \n    base_repo_id\n    \n as \n    \n    base_repo_id\n    \n, \n    \n    \n    base_sha\n    \n as \n    \n    base_sha\n    \n, \n    \n    \n    base_user_id\n    \n as \n    \n    base_user_id\n    \n, \n    \n    \n    head_label\n    \n as \n    \n    head_label\n    \n, \n    \n    \n    head_ref\n    \n as \n    \n    head_ref\n    \n, \n    \n    \n    head_repo_id\n    \n as \n    \n    head_repo_id\n    \n, \n    \n    \n    head_sha\n    \n as \n    \n    head_sha\n    \n, \n    \n    \n    head_user_id\n    \n as \n    \n    head_user_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    issue_id\n    \n as \n    \n    issue_id\n    \n, \n    \n    \n    merge_commit_sha\n    \n as \n    \n    merge_commit_sha\n    \n\n\n\n\n    from pull_request\n\n), fields as (\n\n    select \n      id as pull_request_id,\n      issue_id,\n      head_repo_id,\n      head_user_id\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.431332Z", "completed_at": "2024-03-22T19:18:56.911848Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.914409Z", "completed_at": "2024-03-22T19:18:56.914414Z"}], "thread_id": "Thread-6", "execution_time": 0.5354166030883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__repository", "compiled": true, "compiled_code": "with repository as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repository_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n            \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    archived\n    \n as \n    \n    archived\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    default_branch\n    \n as \n    \n    default_branch\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    fork\n    \n as \n    \n    fork\n    \n, \n    \n    \n    full_name\n    \n as \n    \n    full_name\n    \n, \n    \n    \n    homepage\n    \n as \n    \n    homepage\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    language\n    \n as \n    \n    language\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    private\n    \n as \n    \n    private\n    \n\n\n\n\n    from repository\n\n), fields as (\n\n    select \n      id as repository_id,\n      full_name,\n      private as is_private\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repository\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.417694Z", "completed_at": "2024-03-22T19:18:56.912165Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.914714Z", "completed_at": "2024-03-22T19:18:56.914717Z"}], "thread_id": "Thread-7", "execution_time": 0.5460350513458252, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__repo_team", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repo_team_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    permission\n    \n as \n    \n    permission\n    \n, \n    \n    \n    repository_id\n    \n as \n    \n    repository_id\n    \n, \n    \n    \n    team_id\n    \n as \n    \n    team_id\n    \n\n\n\n        \n    from base\n    \n), final as (\n    \n    select \n        repository_id,\n        team_id\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repo_team\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.952238Z", "completed_at": "2024-03-22T19:18:56.959111Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.961123Z", "completed_at": "2024-03-22T19:18:56.961128Z"}], "thread_id": "Thread-1", "execution_time": 0.012898683547973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__user_user_id.3ac9bb7b4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.435646Z", "completed_at": "2024-03-22T19:18:56.912444Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.915003Z", "completed_at": "2024-03-22T19:18:56.915006Z"}], "thread_id": "Thread-2", "execution_time": 0.535966157913208, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__requested_reviewer_history", "compiled": true, "compiled_code": "with requested_reviewer_history as (\n\n    select *\n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__requested_reviewer_history_tmp\"\n\n), macro as (\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    actor_id\n    \n as \n    \n    actor_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    pull_request_id\n    \n as \n    \n    pull_request_id\n    \n, \n    \n    \n    removed\n    \n as \n    \n    removed\n    \n, \n    \n    \n    requested_id\n    \n as \n    \n    requested_id\n    \n\n\n\n\n    from requested_reviewer_history\n\n), fields as (\n\n    select \n      pull_request_id,\n      cast(created_at as timestamp) as created_at,\n      requested_id,\n      removed\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__requested_reviewer_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.955744Z", "completed_at": "2024-03-22T19:18:56.959432Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.962045Z", "completed_at": "2024-03-22T19:18:56.962050Z"}], "thread_id": "Thread-8", "execution_time": 0.013553857803344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__user_user_id.5c1a00cd90", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__user\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.441211Z", "completed_at": "2024-03-22T19:18:56.937641Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.938242Z", "completed_at": "2024-03-22T19:18:56.938248Z"}], "thread_id": "Thread-5", "execution_time": 0.5580217838287354, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.github_source.stg_github__team", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__team_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_github_source/macros/).\n\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    org_id\n    \n as \n    \n    org_id\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    privacy\n    \n as \n    \n    privacy\n    \n, \n    \n    \n    slug\n    \n as \n    \n    slug\n    \n\n\n\n        \n    from base\n    \n), final as (\n    \n    select \n        id as team_id,\n        description,\n        name,\n        parent_id,\n        privacy,\n        slug\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__team\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.973674Z", "completed_at": "2024-03-22T19:18:56.989014Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.992096Z", "completed_at": "2024-03-22T19:18:56.992100Z"}], "thread_id": "Thread-4", "execution_time": 0.027348995208740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__pull_request_pull_request_id.8f1ca366fa", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    pull_request_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request\"\nwhere pull_request_id is not null\ngroup by pull_request_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.976435Z", "completed_at": "2024-03-22T19:18:56.989334Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.992759Z", "completed_at": "2024-03-22T19:18:56.992762Z"}], "thread_id": "Thread-6", "execution_time": 0.027675867080688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__repository_repository_id.fa3c9c712f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect repository_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repository\"\nwhere repository_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.970448Z", "completed_at": "2024-03-22T19:18:56.989632Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.994071Z", "completed_at": "2024-03-22T19:18:56.994074Z"}], "thread_id": "Thread-3", "execution_time": 0.029917001724243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__pull_request_pull_request_id.bc2132ee71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pull_request_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__pull_request\"\nwhere pull_request_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.980077Z", "completed_at": "2024-03-22T19:18:56.990864Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.995519Z", "completed_at": "2024-03-22T19:18:56.995523Z"}], "thread_id": "Thread-7", "execution_time": 0.03227972984313965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__repository_repository_id.cf6398db3d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    repository_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repository\"\nwhere repository_id is not null\ngroup by repository_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.982776Z", "completed_at": "2024-03-22T19:18:56.991372Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.996009Z", "completed_at": "2024-03-22T19:18:56.996011Z"}], "thread_id": "Thread-2", "execution_time": 0.03507518768310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__repo_team_repository_id.7076be2503", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect repository_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repo_team\"\nwhere repository_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.985512Z", "completed_at": "2024-03-22T19:18:56.991628Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:56.996256Z", "completed_at": "2024-03-22T19:18:56.996259Z"}], "thread_id": "Thread-1", "execution_time": 0.0352020263671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__repo_team_team_id.000230e64c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect team_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__repo_team\"\nwhere team_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:56.997044Z", "completed_at": "2024-03-22T19:18:57.004545Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:57.005532Z", "completed_at": "2024-03-22T19:18:57.005536Z"}], "thread_id": "Thread-8", "execution_time": 0.013865947723388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.not_null_stg_github__team_team_id.440aefe7a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect team_id\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__team\"\nwhere team_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-22T19:18:57.000531Z", "completed_at": "2024-03-22T19:18:57.004819Z"}, {"name": "execute", "started_at": "2024-03-22T19:18:57.005787Z", "completed_at": "2024-03-22T19:18:57.005790Z"}], "thread_id": "Thread-5", "execution_time": 0.01343989372253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.github_source.unique_stg_github__team_team_id.94e9716ab4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    team_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"55_github_integration_tests_github_source\".\"stg_github__team\"\nwhere team_id is not null\ngroup by team_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 2.724868059158325, "args": {"populate_cache": true, "project_dir": "/Users/catherinefritz/Documents/dbt_packages/github/dbt_github_source/integration_tests", "macro_debugging": false, "compile": true, "indirect_selection": "eager", "send_anonymous_usage_stats": true, "enable_legacy_logger": false, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "defer": false, "partial_parse": true, "use_colors": true, "vars": {}, "print": true, "quiet": false, "log_format": "default", "show_resource_report": false, "invocation_command": "dbt docs generate", "static": false, "introspect": true, "printer_width": 80, "cache_selected_only": false, "favor_state": false, "log_level_file": "debug", "strict_mode": false, "which": "generate", "log_level": "info", "exclude": [], "select": [], "static_parser": true, "profiles_dir": "/Users/catherinefritz/.dbt", "empty_catalog": false, "log_path": "/Users/catherinefritz/Documents/dbt_packages/github/dbt_github_source/integration_tests/logs", "log_file_max_bytes": 10485760, "version_check": true, "log_format_file": "debug", "use_colors_file": true, "partial_parse_file_diff": true}}